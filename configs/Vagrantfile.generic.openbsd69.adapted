# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/openbsd6"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  config.vm.provision "shell", run: "always", inline: <<-SHELL
     export HOSTNAME="perl-reporter-11"
     hostname $HOSTNAME
     hostname

     # Update packages that came with the VM
     sudo pkg_add -u curl sudo vim wget

     # Add my most useful packages
     sudo pkg_add -u git subversion
     sudo pkg_add -u screen--

     # Packages which provide CPAN libraries which facilitate jkeenan's
     # programming (including smoke-testing core distribution):
     sudo pkg_add -u \
        p5-Capture-Tiny \
        p5-common-sense \
        p5-Data-Dump \
        p5-Devel-Cover \
        p5-HTTP-Daemon \
        p5-HTTP-Message \
        p5-IO-Socket-SSL \
        p5-JSON \
        p5-JSON-XS \
        p5-List-Compare \
        p5-Net-SSLeay \
        p5-Path-Tiny \
        p5-Test-NoWarnings \
        p5-Text-CSV \
        p5-Text-CSV_XS \
        p5-Text-CSV-Hashify \
        p5-File-Which \
        p5-Sub-Info \
        p5-Sub-Name \
        p5-Test-Pod \
        p5-Test-Reporter \
        p5-ack

     # Packages which are prerequisites for CPAN libraries in next stanza:
     # (Commented out because they were automatically installed via 'cpan'.)
#     sudo pkg_add \
#        p5-CGI \
#        p5-File-Next \
#        p5-Sub-Uplevel \
#        p5-Test-Deep \
#        p5-Test-RequiresInternet \
#        p5-Test-Warn

#    # CPAN libraries needed for jkeenan's programming but not provided in OpenBSD ports
     sudo cpan \
        App::cpanminus \
        Encode \
        Perl5::Build::Warnings \
        Perl::Download::FTP \
        CGI::Util \
        System::Info \
        CPAN::Reporter \
        Task::CPAN::Reporter

  SHELL
end
